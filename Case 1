q1) What is the total amount spent by each customer ?

SELECT s.customer_id,sum(m.price) as total_price
from dannys_diner.sales as s
inner join dannys_diner.menu as m on s.product_id = m.product_id
group by s.customer_id;

q2) How many days has each customer visited the restaurant?

SELECT customer_id, count(distinct(order_date)) as total_days
from dannys_diner.sales
group by customer_id

q3)  What was the first item from the menu purchased by each customer?

SELECT s.customer_id,p.product_name
from dannys_diner.sales as s
inner join dannys_diner.menu as p on s.product_id = p.product_id
where order_date = (select min(order_date) from dannys_diner.sales)
group by s.customer_id,p.product_name

q4) What is the most purchased item on the menu and how many times was it purchased by all customers?

select l.product_name, count(s.product_id) as maximum_purchased  
from dannys_diner.menu as l
join dannys_diner.sales as s on l.product_id = s.product_id
group by l.product_name
order by maximum_purchased desc
limit 1;

q5) 

with temp_cte as(
    select a.customer_id, count(a.order_date) as num_times,b.product_name,
    dense_rank() over(partition by a.customer_id order by count(a.order_date) desc) ranking 
    from dannys_diner.sales a
    left join dannys_diner.menu b 
    on a.product_id = b.product_id
    group by a.customer_id,b.product_name
) 

select customer_id, num_times, product_name
from temp_cte where ranking = 1;

q6)
with temp_cte as(
    select a.customer_id, a.order_date,b.product_name,
    dense_rank() over(partition by a.customer_id order by a.order_date) ranking 
    from dannys_diner.sales a
    inner join dannys_diner.members c
    on a.customer_id = c.customer_id 
    left join dannys_diner.menu b 
    on a.product_id = b.product_id
    where a.order_date >= c.join_date
) 

select customer_id, order_Date, product_name
from temp_cte where ranking = 1;

q7)

with temp_cte as(
    select a.customer_id, a.order_date,b.product_name,
    dense_rank() over(partition by a.customer_id order by a.order_date desc) ranking 
    from dannys_diner.sales a
    inner join dannys_diner.members c
    on a.customer_id = c.customer_id 
    left join dannys_diner.menu b 
    on a.product_id = b.product_id
    where a.order_date < c.join_date
) 

select customer_id, order_Date, product_name
from temp_cte where ranking = 1;

q8) 

select a.customer_id, count(a.product_id),sum(b.price)
from dannys_diner.sales as a
inner join dannys_diner.menu as b on a.product_id = b.product_id
inner join dannys_diner.members as c on a.customer_id = c.customer_id
where a.order_date < c.join_date
group by a.customer_id

q9)


